const User = require("../models/userModel");

// üîπ L·∫•y danh s√°ch user
exports.getUsers = async (req, res) => {
  try {
    const users = await User.find();
    res.status(200).json(users);
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error });
  }
};

// üîπ L·∫•y user theo ID
exports.getUserById = async (req, res) => {
  try {
    const user = await User.findById(req.params.id);
    if (!user) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y user" });
    res.status(200).json(user);
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error });
  }
};

// üîπ Th√™m user m·ªõi
exports.createUser = async (req, res) => {
  try {
    const { name, email, age } = req.body;
    const newUser = new User({ name, email, age });
    await newUser.save();
    res.status(201).json({ message: "User ƒë∆∞·ª£c t·∫°o", newUser });
  } catch (error) {
    res.status(400).json({ message: "Kh√¥ng th·ªÉ t·∫°o user", error });
  }
};

// üîπ C·∫≠p nh·∫≠t user
exports.updateUser = async (req, res) => {
  try {
    const { name, email, age } = req.body;
    const updatedUser = await User.findByIdAndUpdate(
      req.params.id,
      { name, email, age },
      { new: true }
    );
    if (!updatedUser) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y user" });
    res.status(200).json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng", updatedUser });
  } catch (error) {
    res.status(400).json({ message: "L·ªói c·∫≠p nh·∫≠t", error });
  }
};

// üîπ X√≥a user
exports.deleteUser = async (req, res) => {
  try {
    const deletedUser = await User.findByIdAndDelete(req.params.id);
    if (!deletedUser) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y user" });
    res.status(200).json({ message: "X√≥a user th√†nh c√¥ng" });
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error });
  }
};
